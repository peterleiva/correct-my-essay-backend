/**
 * @fileoverview Json Api duplicated error handler for express app
 */

import { Request, Response, NextFunction } from 'express';
import AlreadyExistsError from '../../errors/already-exists-error';
import Serializer from '../serializer';
import { JsonApiError } from '.';

/**
 * Handler for duplicated record error
 *
 * Duplicated Error is throwed by the application whever a existing record is
 * being saved. Those errors is mostly generated by the database when violate
 * a uniqueness index. The handler generate the apropriated JsonApiError
 *
 * @param {Error} error runtime error
 * @param {express.Request} req express request
 * @param {express.Response} res express response
 * @param {express.NextFunction} next express next function
 * @return {Promise<void>}
 */
export default async function duplicatedErrorHandler(error: Error, req: Request,
	res: Response, next: NextFunction): Promise<void> {
	if (error instanceof AlreadyExistsError) {
		console.log('duplicated error handler');
		const jsonApiError = new JsonApiError(error.message);
		jsonApiError.title = `Record already Exists`;
		jsonApiError.detail = jsonApiError.message;
		jsonApiError.status = '404';

		try {
			res.status(404).send(await Serializer.serializeError(jsonApiError));
		} catch (error) {
			next(error);
		}
	} else {
		next(error);
	}
}
